#!/bin/sh

################################################################################
# Functions
################################################################################
usage()
{
cat << Help
usage: `basename $0` [OPTION]... [DIRECTORY]

Install OMBU optimized Drupal site in [DIRECTORY] or the current directory if
no directory is given.

Options:

  -d [NAME]    Database name. If site is set to install and this option isn't given,
               then you will be prompted to enter this during the install process.
  -u [USER]    Database user. If site is set to install and this option isn't given,
               then you will be prompted to enter this during the install process.
  -p           Prompt for database password.
  -s [SITE]    Site name. If not set, then will default to "Site Name"
  -e [EMAIL]   Site email. If not set, then will default to "example@ombuweb.com"

Misc:
  -x           Install dev modules and data.
  -n           No install; don't install Drupal site after downloading it
  -h           This help
  
Help
}

# define temp directory
# Warning: this directory will be removed at the end of the script, so make sure
# it's a subdirectory
TMP="/tmp/drupalbuild"
if [ ! -d $TMP ]; then
  mkdir $TMP
fi

################################################################################
# Command line args
################################################################################

while getopts ":d:u:s:e:pxnh" opt
do
    case $opt in
    d)
      DBNAME=$OPTARG
      ;;
    u)
      DBUSER=$OPTARG
      ;;
    p)
      echo "Enter database password for user $DBUSER:"
      stty -echo; read -r DBPASS; stty echo  # won't display what user types
      ;;
    s)
      SITENAME=$OPTARG
      ;;
    e)
      SITEMAIL=$OPTARG
      ;;
    n)
      NOINSTALL=true
      ;;
    x)
      DEV=true
      ;;
    h)
      usage
      exit
      ;;
    \?)
      echo "Invalid option: -$OPTARG"
      exit
      ;;
    esac
done
shift $(($OPTIND - 1))

INSTALLDIR='.'
if [ $* ]; then
  INSTALLDIR=$*

  # Create install directory if it doesn't exist
  echo "+ Creating install directory $INSTALLDIR"
  if [ ! -d $INSTALLDIR ]; then
    mkdir $INSTALLDIR
  fi
  if [ ! -d $INSTALLDIR/private ]; then
    mkdir $INSTALLDIR/private
  fi
fi


################################################################################
# Drupal site build
################################################################################
echo "+ Building Drupal code"

# Download make file (can't run it off of github behind private repo)
if [ ! -d $TMP/drupal-installer ]; then
  git clone git@github.com:ombu/drupal-installer.git $TMP/drupal-installer
fi

# Build drupal site with make file, keeping repo directories
# drush make --no-clean --working-copy $TMP/drupal-installer/ombu7.make "$INSTALLDIR/public"

echo "+ Drupal build complete"

# Build reset script
cp $TMP/drupal-installer/reset.sh $INSTALLDIR/private/

sed -e "s/__DBNAME__/$DBNAME/g" /
    -e "s/__DBUSER__/$DBUSER/g" /
    -e "s/__DBPASS__/$DBPASS/g" /
    -e "s/__SITENAME__/$SITENAME/g" /
    -e "s/__SITEMAIL__/$SITEMAIL/g" /
    < $INSTALLDIR/private/reset.sh > $INSTALLDIR/private/reset.sh

chmod 775 $INSTALLDIR/private/reset.sh
echo "+ Reset script created"

# Create new repo and first commit
echo "+ Creating initial mercurial repo"
cd $INSTALLDIR
hg init

# .hgignore file
cat << HgIgnore > .hgignore
sites/default/settings.php
sites/default/files
.*\.git
HgIgnore

hg add

PROFILEREV=`git --git-dir=public/profiles/ombuprofile/.git --work-tree=public/profiles/ombuprofile rev-parse HEAD`
hg ci -m "Initial install of OMBU Base rev# $PROFILEREV"

if [ $NOINSTALL ]; then
  echo "Called with noinstall option. Exiting before running installer."
  exit 0
fi

# Run reset script in order to install site
echo "+ Installing site"
cd public
exit

if [ $DEV ]; then
  ../private/reset.sh -d
else
  ../private/reset.sh
fi


################################################################################
# Cleanup
################################################################################
# rm -rf $TMP
